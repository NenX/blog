(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{470:function(i,p,r){"use strict";r.r(p);var s=r(42),t=Object(s.a)({},(function(){var i=this,p=i.$createElement,r=i._self._c||p;return r("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/63627218",target:"_blank",rel:"noopener noreferrer"}},[i._v("来源"),r("OutboundLink")],1)]),i._v(" "),r("p",[i._v("先说amd和intel")]),i._v(" "),r("p",[i._v("amd和Intel这俩公司的渊源很深，早期时Intel先是自己搞了个x86架构，然后amd拿到了x86的授权也可以自己做x86了。")]),i._v(" "),r("p",[i._v("接着intel向64位过渡的时候自己搞了个ia64（x64架构）但是因为和x86架构不兼容市场反应极差，amd率先搞了x86的64位兼容（32和64的混合架构）也就是后来的x86-64，后来Intel也拿到了生产这货的授权（i和a两家专利交叉的很严重），也搞了x86-64，因为amd先搞出来的所以x86-64也叫amd64目前amd和Intel是世界上最大的两家x86和x86-64的cpu厂家（intel比较给力，四分天下有其三）。")]),i._v(" "),r("p",[i._v("除了这两家还有几家小的公司也有x86的授权，比如via，不过技术水平真的很一般。再说x86，arm和mips这三个的区别和联系要从cpu早期说起，早期的cpu有两个设计思路")]),i._v(" "),r("ul",[r("li",[i._v("把cpu内的逻辑电路做的非常复杂，这样可以直接用cpu硬件事先复杂指令，这个叫复杂指令集cisc；")]),i._v(" "),r("li",[i._v("另一个思路是尽可能把cpu做的简单，依靠简单指令的组合迭代完成复杂指令，这个叫精简指令集riscx86目前泛指x86和x86-64架构，这是因为x86-64完全兼容x86。早期的x86是cisc的代表，后来的发展中逐步引入了risc的部分理念，将内部指令的实现大量模块化，准确来说是一个cisc外加risc部分技术的架构。目前x86的主要产品有Intel的至强，酷睿，奔腾，赛扬和凌动；amd的锐龙，apu等。上文提到的x64架构目前只有intel 安腾而且已经放弃了产品线。到目前为止intel和amd的x86架构cpu虽然指令集上有很大差别了但是还是相互兼容的，所以软件可以直接用。")])]),i._v(" "),r("p",[i._v("再说arm。")]),i._v(" "),r("p",[i._v("risc:")]),i._v(" "),r("ul",[r("li",[i._v("arm是risc的典型代表，不过在arm的发展过程中引入了部分复杂指令（完全没有复杂指令的话操作系统跑起来异常艰难），所以是一个risc基础外加cisc技术的cpu。arm的主要专利技术在arm公司手中，像高通，三星，苹果这些公司需要拿到arm的授权。")]),i._v(" "),r("li",[i._v("另一个risc的典型处理器就是mips。mips是一个学院派的cpu，授权门槛极低，因此很多厂家都做mips或者mips衍生架构。我们平时接触到的mips架构cpu主要用在嵌入式领域，比如路由器。目前最活跃的mips是中国的龙芯，其loongisa架构其实是mips的扩展。目前无论mips还是arm，性能和主流x86差距都很大，不过arm贵在便宜低功耗，mips则纯计算能力很强（学院派的东西貌似都这样）除了上述几家，还有power cpu（risc的，老苹果用的就是这货）；alpha架构的cpu（侧重超算，目前貌似最活跃是中国申威，神威太湖之光的cpu就是这货）。")])])])}),[],!1,null,null,null);p.default=t.exports}}]);