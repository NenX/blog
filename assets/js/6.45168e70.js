(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(v,_,l){v.exports=l.p+"assets/img/字.8004b9f6.png"},353:function(v,_,l){v.exports=l.p+"assets/img/合成物理地址.ba016ba3.png"},402:function(v,_,l){"use strict";l.r(_);var s=l(42),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h2",{attrs:{id:"cpu-组成：以运算器、寄存器、控制器由内部总线相连"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cpu-组成：以运算器、寄存器、控制器由内部总线相连"}},[v._v("#")]),v._v(" CPU 组成：以运算器、寄存器、控制器由内部总线相连")]),v._v(" "),s("ul",[s("li",[v._v("运算器：信息处理")]),v._v(" "),s("li",[v._v("寄存器：信息存储")]),v._v(" "),s("li",[v._v("控制器：控制各种器件进行工作")])]),v._v(" "),s("blockquote",[s("p",[v._v("8086 有 14 个寄存器：\nAX、BX、CX、DX、SI、DI、SP、BP、IP、CS、DS、SS、ES、PSW")])]),v._v(" "),s("h2",{attrs:{id:"通用寄存器："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通用寄存器："}},[v._v("#")]),v._v(" 通用寄存器：")]),v._v(" "),s("ul",[s("li",[v._v("AX、BX、CX、DX用来存放一般性数据")]),v._v(" "),s("li",[v._v("16 位寄存器能存储的最大值是 16^2-1。")]),v._v(" "),s("li",[v._v("为了保证兼容性，8086 CPU 的通用寄存器可以分为两个独立的 8 位寄存器使用。例如 AX 可分为 AH 和 AL。")]),v._v(" "),s("li",[v._v("字：\n"),s("ul",[s("li",[v._v("字是两字节，需要用两个地址联系的内存单元来存放，字的低位字节存放在低地址内存单位中，字的高位字节存放在高地址内存单元中。")]),v._v(" "),s("li",[v._v("8086 CPU所有的寄存器是 16 位，可以存放两个字节（一个字）。")])])])]),v._v(" "),s("p",[s("img",{attrs:{src:l(352)}})]),v._v(" "),s("h2",{attrs:{id:"段寄存器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#段寄存器"}},[v._v("#")]),v._v(" 段寄存器")]),v._v(" "),s("h3",{attrs:{id:"_8086-cpu-给出物理地址的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8086-cpu-给出物理地址的方法"}},[v._v("#")]),v._v(" 8086 CPU 给出物理地址的方法")]),v._v(" "),s("ul",[s("li",[v._v("8086 CPU有 20 位的地址总线，可以传送 20 地址，寻址能力位 1 M，，但 8086 为 16 位结构，只能传送 16 位的地址。")]),v._v(" "),s("li",[v._v("8086 CPU 采用一种在内部用两个 16 位地址合成的方法来形成一个 20 位的物理地址。\n"),s("ul",[s("li",[v._v("CPU 中相关部件提供了两个 16 位地址：段地址和偏移地址")]),v._v(" "),s("li",[v._v("段地址和偏移地址通过内部总线送到地址加法器")]),v._v(" "),s("li",[v._v("地址加法器通过 "),s("code",[v._v("段地址*16 + 偏移地址")]),v._v(" 合成 20 位物理地址")]),v._v(" "),s("li",[v._v("20 位物理地址送到输入输出电路，再通过地址总线传送到存储器")])])])]),v._v(" "),s("p",[s("img",{attrs:{src:l(353)}})]),v._v(" "),s("ul",[s("li",[v._v("段：将若干连续的存储单位看作一个段\n"),s("ul",[s("li",[v._v("定位起始地址：段地址 * 16")]),v._v(" "),s("li",[v._v("定位内存单位：偏移地址")]),v._v(" "),s("li",[v._v("一个段的起始地址是 16 的倍数，偏移地址是 16 位，寻址能力位 64k。")])])])]),v._v(" "),s("h3",{attrs:{id:"段寄存器：cs（代码段）、ds（数据段）、ss（堆栈段）、es（附加段）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#段寄存器：cs（代码段）、ds（数据段）、ss（堆栈段）、es（附加段）"}},[v._v("#")]),v._v(" 段寄存器：CS（代码段）、DS（数据段）、SS（堆栈段）、ES（附加段）")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("CS 和 IP：指示了指令的地址")]),v._v(" "),s("ul",[s("li",[v._v("8086 CPU 工作简要概述\n"),s("blockquote",[s("p",[v._v("8086PC 机刚开始启动时，CPU 从内存 "),s("code",[v._v("FFFF0h")]),v._v(" 单元中读取指令执行，"),s("code",[v._v("FFFF0h")]),v._v(" 单元中的指令时 8086PC 机开机后执行的第一条指令。")])]),v._v(" "),s("ol",[s("li",[v._v("从 "),s("code",[v._v("CS:IP")]),v._v(" 读取指令，读取的指令进入指令缓冲器")]),v._v(" "),s("li",[v._v("IP=IP + 所读取指令的长度，从而正确的指向下一条指令；")]),v._v(" "),s("li",[v._v("执行指令。转到步骤1，周而复始。")])])]),v._v(" "),s("li",[v._v("修改 CS、IP 的指令\n"),s("ul",[s("li",[v._v("mov：可以改变大部分寄存器的值，但不能用于设置 CS、IP 的值")]),v._v(" "),s("li",[v._v("jmp：用来修改 CS、IP 的值")])]),v._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[v._v("jmp fff0:1000 ;修改 CS 和 IP\njmp ax ;仅修改IP\n")])])])]),v._v(" "),s("li",[v._v("代码段：")])])]),v._v(" "),s("li",[s("p",[v._v("DS 和 [address]")]),v._v(" "),s("blockquote",[s("p",[v._v("数据 -> 通用寄存器 -> 段寄存器")])]),v._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[v._v("mov ax 1\nmov ds ax\nmov bx [0]\nmov [0] ax\n")])])]),s("ul",[s("li",[v._v("数据段：")])])]),v._v(" "),s("li",[s("p",[v._v("SS 和 SP")]),v._v(" "),s("ul",[s("li",[v._v("SS 存放栈顶的段地址，SP 存放栈顶的偏移地址，任意时刻 SS:SP 指向栈顶元素")]),v._v(" "),s("li",[v._v("栈：8086 可以将一段内存当作栈来使用（人为规定栈底和栈的长度）\n"),s("ul",[s("li",[v._v("push ax：SP 先自减，再将寄存器的值推入栈")]),v._v(" "),s("li",[v._v("pop ax：从栈顶取出数据送入 ax，SP 再自增")]),v._v(" "),s("li",[v._v("栈为空时，SP 指向栈底+1的内存单元")])])])])])])])}),[],!1,null,null,null);_.default=a.exports}}]);